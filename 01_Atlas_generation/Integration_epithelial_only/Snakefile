
## Sanitize provided input and output directories
import re
def getpath(str):
	if str in ['', '.', './']:
		return ''
	if str.startswith('./'):
		regex = re.compile('^\./?')
		str = regex.sub('', str)
	if not str.endswith('/'):
		str += '/'
	return str

## Paths
norm_output_dir = getpath(config["norm_output_dir"])
norm_output_list_dir = getpath(config["norm_output_list_dir"])
integration_output_dir = getpath(config["integration_output_dir"])
logs_output_dir = getpath(config["logs_output_dir"])
mixing_metric_dir = getpath(config["mixing_metric_dir"])
subset_output_dir = getpath(config["subset_output_dir"])

## -------------------------- ##
## Run all
## -------------------------- ##

rule all:
	input:
		expand(norm_output_list_dir + "EndoAtlas_{norm_setup_batch}_{sample}_batch_list.RDS", norm_setup_batch=["percent.mt_sample"], sample=config["samples"]),
		expand(integration_output_dir + "EndoAtlas_{norm_setup_batch}_{sample}_integration_batch_hvg.RDS", norm_setup_batch=["percent.mt_sample"], sample=config["samples"])
## --------------------------- ##
## Run SCT_transform
## --------------------------- ##

integration_output_dir + "EndoAtlas_{norm_setup_batch}_{sample}_integration_batch_hvg.rds"

## Run normalization with integration by batch
rule sct_transform_list_batch:
	input:
		"/endometriosis_endometrium_scRNA_atlas/01_Atlas_generation/Integration/EndoAtlas_percent.mt_sample_samples_integration_batch_hvg.rds"
	output:
		norm_output_list_dir + "EndoAtlas_{norm_setup_batch}_{sample}_batch_list.RDS"
	params:
		"{norm_setup_batch}",
		"batch"
	log:
		log_file = logs_output_dir + "EndoAtlas_{norm_setup_batch}_{sample}_batch_list.log",
		log_object = logs_output_dir + "EndoAtlas_{norm_setup_batch}_{sample}_batch_list.RData"
	resources:
		mem_mb = config['memory_norm']
	threads:
		config["ncores_norm"]
	conda:
		"envs/seurat_post_processing_env.yaml"
	script:
		"scripts/01b_run_normalization_split.R"



rule seurat3_integration_hvg_batch:
	input:
		rules.sct_transform_list_batch.output
	output:
		integration_output_dir + "EndoAtlas_{norm_setup_batch}_{sample}_integration_batch_hvg.RDS"
	params:
		"{norm_setup_batch}",
		"{sample}",
		config["n_features_integration_hvg"],
		"batch"

	log:
		log_file = logs_output_dir + "EndoAtlas_{norm_setup_batch}_{sample}_integration_batch_hvg.log",
		log_object = logs_output_dir + "EndoAtlas_{norm_setup_batch}_{sample}_integration_batch_hvg.RData"
	resources:
		mem_mb = config['memory_seuratv3']
	threads:
		config["ncores_seuratv3"]
	conda:
		"envs/seurat_post_processing_env.yaml"
	script:
		"scripts/02_run_seuratv3.R"
   
   
